{"version":3,"sources":["components/Admin/BlockLayout.js","pages/Admin/Dashboard.js","components/ConfirmButton.js","components/Gallery.js","pages/Admin/Gallery.js","components/Admin/Nav/LeftNav.js","components/Admin/Nav/TopNav.js","pages/Admin/Layout.js","hocs/customInput.js","pages/Admin/Category.js","components/Admin/GalleryModal.js","pages/Admin/Author.js","pages/Admin/User.js","components/Admin/ImagePicker.js","components/Admin/Form/ProductEditForm.js","pages/Admin/Product.js","components/Admin/ProductPicker.js","components/Admin/Form/OrderEditForm.js","pages/Admin/Order.js","pages/Admin/Route.js"],"names":["BlockLayout","children","blockName","borderWidth","borderRadius","py","borderBottomWidth","px","size","p","Dashboard","columns","gap","bg","color","type","colSpan","chartType","loader","data","options","title","hAxis","titleTextStyle","vAxis","minValue","chartArea","width","height","rootProps","pieHole","region","displayMode","colorAxis","colors","mapsApiKey","direction","ConfirmButton","buttonText","content","closeText","acceptText","onAccept","rest","React","useState","isOpen","setIsOpen","onClose","cancelRef","useRef","onClick","leastDestructiveRef","fontSize","fontWeight","ref","colorScheme","ml","Item","public_id","secure_url","onChange","isDisabled","objectFit","h","src","e","target","checked","Gallery","dialog","onInsert","multiple","images","setImages","ids","setIds","cursor","setCursor","error","setError","fileInput","urls","setUrls","a","preventDefault","uploadImages","files","Array","from","current","fetchData","value","length","deleteImages","public_ids","map","item","reset","fetchImages","getImages","list","next_cursor","handleSelect","isAdd","img","filter","useEffect","onSubmit","id","placeholder","mt","textColor","as","InfiniteScroll","hasMore","dataLength","next","alignItems","image","GalleryPage","menu","name","icon","FcRatings","path","FcFolder","FcReading","FcBusinesswoman","FcNews","FcManager","LeftNav","history","useHistory","borderRightWidth","align","overflow","pb","mr","borderTopWidth","push","_hover","w","TopNav","onToggle","FcMenu","maxW","pointerEvents","FaSearch","justify","flex","to","FaHome","Layout","enableDrawer","useBreakpointValue","sm","md","lg","xl","base","setOpen","placement","Comp","initialValue","column","original","row","save","rules","clickToEdit","valueName","isEdit","setEdit","setValue","errorLabel","setErrorLabel","input","props","useMemo","onBlur","toString","trim","focus","test","label","shouldWrapChildren","hasArrow","FcLock","Category","iconNameList","Object","keys","FcIcon","fetchCategories","categories","setCategories","Header","accessor","Cell","IconSelect","customInput","Select","i","NameInput","Input","table","ParentInput","console","log","category","parent","remove","skipPageReset","setSkipPage","action","parentID","updateCategory","removeCategory","addCategory","my","Table","GalleryModal","maxH","overflowY","Author","useDisclosure","onOpen","avatarData","setAvatarData","openModal","DescInput","Textarea","authors","setAuthors","fetchAuthors","avatar","description","updateAuthor","removeAuthor","addAuthor","User","EmailInput","AdminCheckbox","Checkbox","PasswordInput","users","setUsers","setSkipReset","email","password","updateUser","removeUser","fetchUsers","addUser","random","ImagePicker","mb","wrap","FaRegTrashAlt","deleteItem","newList","find","ProductEditForm","product","categoryOptions","authorOptions","useForm","defaultValues","handleSubmit","control","errors","price","Number","discount","JSON","stringify","author","handleSave","isInvalid","htmlFor","required","defaultValue","render","isSearchable","isMulti","min","step","max","onEditorChange","ProductPage","displayType","thousandSeparator","prefix","join","getToggleRowExpandedProps","products","setProducts","addProduct","updateProduct","renderRowSubComponent","useCallback","removeProduct","fetchProducts","search","ProductPicker","items","productOptions","handleChange","updateItem","quantity","total","reduce","prev","findItem","ShortedProduct","decimalScale","OrderEditForm","order","userOptions","statusOptions","userID","user","status","address","OrderPage","moment","fromNow","orders","setOrders","fetchOrders","updateOrder","addOrder","phone","removeOrder","withAuth","component","checkAdmin"],"mappings":"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","file":"static/js/4.36a006fc.chunk.js","sourcesContent":["import { Box, Heading, HStack } from '@chakra-ui/react';\r\n\r\nexport default function BlockLayout({ children, blockName }) {\r\n  return (\r\n    <Box borderWidth={1} borderRadius=\"md\">\r\n      {blockName && (\r\n        <HStack py={2} borderBottomWidth={1} px={2}>\r\n          <Heading size=\"md\">{blockName}</Heading>\r\n        </HStack>\r\n      )}\r\n      <Box p={2}>{children}</Box>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  GridItem,\r\n  SimpleGrid,\r\n  Stack,\r\n  Stat,\r\n  StatArrow,\r\n  StatGroup,\r\n  StatHelpText,\r\n  StatLabel,\r\n  StatNumber,\r\n} from '@chakra-ui/react';\r\nimport Chart from 'react-google-charts';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <SimpleGrid columns={[1, 2, 4]} gap={4}>\r\n      <StatGroup p={2} borderRadius=\"md\" bg=\"red.500\" color=\"white\">\r\n        <Stat>\r\n          <StatLabel>Sent</StatLabel>\r\n          <StatNumber>345,670</StatNumber>\r\n          <StatHelpText>\r\n            <StatArrow type=\"increase\" />\r\n            23.36%\r\n          </StatHelpText>\r\n        </Stat>\r\n      </StatGroup>\r\n      <StatGroup p={2} borderRadius=\"md\" bg=\"pink.500\" color=\"white\">\r\n        <Stat>\r\n          <StatLabel>Sent</StatLabel>\r\n          <StatNumber>345,670</StatNumber>\r\n          <StatHelpText>\r\n            <StatArrow type=\"increase\" />\r\n            23.36%\r\n          </StatHelpText>\r\n        </Stat>\r\n      </StatGroup>\r\n      <StatGroup p={2} borderRadius=\"md\" bg=\"teal.500\" color=\"white\">\r\n        <Stat>\r\n          <StatLabel>Sent</StatLabel>\r\n          <StatNumber>345,670</StatNumber>\r\n          <StatHelpText>\r\n            <StatArrow type=\"increase\" />\r\n            23.36%\r\n          </StatHelpText>\r\n        </Stat>\r\n      </StatGroup>\r\n      <StatGroup p={2} borderRadius=\"md\" bg=\"blue.500\" color=\"white\">\r\n        <Stat>\r\n          <StatLabel>Sent</StatLabel>\r\n          <StatNumber>345,670</StatNumber>\r\n          <StatHelpText>\r\n            <StatArrow type=\"increase\" />\r\n            23.36%\r\n          </StatHelpText>\r\n        </Stat>\r\n      </StatGroup>\r\n      <GridItem colSpan={[1, 2]}>\r\n        <BlockLayout blockName=\"Site Traffic\">\r\n          <Chart\r\n            chartType=\"AreaChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Year', 'Sales', 'Expenses'],\r\n              ['2013', 1000, 400],\r\n              ['2014', 1170, 460],\r\n              ['2015', 660, 1120],\r\n              ['2016', 1030, 540],\r\n            ]}\r\n            options={{\r\n              title: 'Company Performance',\r\n              hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\r\n              vAxis: { minValue: 0 },\r\n              // For the legend to fit, we make the chart area smaller\r\n              chartArea: { width: '50%', height: '70%' },\r\n              // lineWidth: 25\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </BlockLayout>\r\n      </GridItem>\r\n      <GridItem colSpan={[1, 2]}>\r\n        <BlockLayout blockName=\"Weekly Sales\">\r\n          <Chart\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Task', 'Hours per Day'],\r\n              ['Work', 11],\r\n              ['Eat', 2],\r\n              ['Commute', 2],\r\n              ['Watch TV', 2],\r\n              ['Sleep', 7],\r\n            ]}\r\n            options={{\r\n              title: 'My Daily Activities',\r\n              // Just add this option\r\n              pieHole: 0.4,\r\n            }}\r\n            rootProps={{ 'data-testid': '3' }}\r\n          />\r\n        </BlockLayout>\r\n      </GridItem>\r\n      <GridItem colSpan={[1, 2]}>\r\n        <BlockLayout blockName=\"World Selling Region\">\r\n          <Chart\r\n            chartType=\"GeoChart\"\r\n            data={[\r\n              ['City', 'Population', 'Area'],\r\n              ['Rome', 2761477, 1285.31],\r\n              ['Milan', 1324110, 181.76],\r\n              ['Naples', 959574, 117.27],\r\n            ]}\r\n            options={{\r\n              region: 'IT',\r\n              displayMode: 'markers',\r\n              colorAxis: { colors: ['green', 'blue'] },\r\n            }}\r\n            mapsApiKey=\"AIzaSyD5LRDYeqyPfkp4CTXWoVXzL_WVMDZt6G0\"\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n        </BlockLayout>\r\n      </GridItem>\r\n      <GridItem colSpan={[1, 2]}>\r\n        <BlockLayout blockName=\"Total Sales\">\r\n          <Stack direction={['column', 'column', 'row']}>\r\n            <StatGroup p={2} borderRadius=\"md\" bg=\"red.500\" color=\"white\">\r\n              <Stat>\r\n                <StatLabel>Sent</StatLabel>\r\n                <StatNumber>345,670</StatNumber>\r\n                <StatHelpText>\r\n                  <StatArrow type=\"increase\" />\r\n                  23.36%\r\n                </StatHelpText>\r\n              </Stat>\r\n            </StatGroup>\r\n            <StatGroup p={2} borderRadius=\"md\" bg=\"red.500\" color=\"white\">\r\n              <Stat>\r\n                <StatLabel>Sent</StatLabel>\r\n                <StatNumber>345,670</StatNumber>\r\n                <StatHelpText>\r\n                  <StatArrow type=\"increase\" />\r\n                  23.36%\r\n                </StatHelpText>\r\n              </Stat>\r\n            </StatGroup>\r\n            <StatGroup p={2} borderRadius=\"md\" bg=\"red.500\" color=\"white\">\r\n              <Stat>\r\n                <StatLabel>Sent</StatLabel>\r\n                <StatNumber>345,670</StatNumber>\r\n                <StatHelpText>\r\n                  <StatArrow type=\"increase\" />\r\n                  23.36%\r\n                </StatHelpText>\r\n              </Stat>\r\n            </StatGroup>\r\n          </Stack>\r\n        </BlockLayout>\r\n      </GridItem>\r\n      <GridItem colSpan={[1, 2]}>\r\n        <BlockLayout blockName=\"New Orders\">\r\n\r\n        </BlockLayout>\r\n      </GridItem>\r\n    </SimpleGrid>\r\n  );\r\n}\r\n","import {\r\n    AlertDialog,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay,\r\n    Button\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React from \"react\";\r\n\r\nexport default function ConfirmButton({ buttonText, title = 'Detele', content = 'Do you want to delete this?', closeText = 'No', acceptText = 'Yes', onAccept, ...rest }) {\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = React.useRef()\r\n  \r\n    return (\r\n      <>\r\n        <Button {...rest} onClick={() => setIsOpen(true)}>\r\n          { buttonText }\r\n        </Button>\r\n  \r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                { title }\r\n              </AlertDialogHeader>\r\n  \r\n              <AlertDialogBody>\r\n                { content }\r\n              </AlertDialogBody>\r\n  \r\n              <AlertDialogFooter>\r\n                <Button size=\"sm\" ref={cancelRef} onClick={onClose}>\r\n                  { closeText }\r\n                </Button>\r\n                <Button size=\"sm\" colorScheme=\"red\" onClick={() => { onClose(); onAccept(); }} ml={3}>\r\n                  { acceptText }\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n      </>\r\n    )\r\n  }","import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  HStack,\r\n  Image,\r\n  SimpleGrid,\r\n  Spinner,\r\n  Textarea,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ConfirmButton from '../components/ConfirmButton';\r\nimport { deleteImages, fetchImages, uploadImages } from '../api';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nfunction Item({ public_id, secure_url, onChange, isDisabled }) {\r\n  function handleChange(e) {\r\n    if (e.target.checked === true) {\r\n      onChange(true, { public_id, secure_url });\r\n    } else {\r\n      onChange(false, { public_id });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <VStack p={4} borderWidth={1} borderRadius=\"md\">\r\n      <Image objectFit=\"contain\" h={150} src={secure_url} />\r\n      <Checkbox\r\n        onChange={handleChange}\r\n        colorScheme=\"green\"\r\n        isDisabled={isDisabled}\r\n      ></Checkbox>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default function Gallery({ dialog, onInsert, multiple = true }) {\r\n  const [images, setImages] = useState([]);\r\n  const [ids, setIds] = useState([]);\r\n  const [cursor, setCursor] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const fileInput = useRef(null);\r\n  const [urls, setUrls] = useState('');\r\n\r\n  async function handleUpload(e) {\r\n    e.preventDefault();\r\n    try {\r\n      await uploadImages({\r\n        files: Array.from(fileInput.current.files),\r\n        urls,\r\n      });\r\n      await fetchData(true);\r\n      setError(null);\r\n      fileInput.current.value = '';\r\n      setUrls('');\r\n    } catch (error) {\r\n      setError('Upload Error');\r\n    }\r\n  }\r\n\r\n  async function handleDelete() {\r\n    if (ids.length === 0) return;\r\n\r\n    try {\r\n      await deleteImages({\r\n        public_ids: ids.map(item => item.public_id),\r\n      });\r\n      setIds([]);\r\n      setError(null);\r\n      await fetchData(true);\r\n    } catch (error) {\r\n      setError('Delete Error');\r\n    }\r\n  }\r\n\r\n  async function fetchData(reset){\r\n    const {\r\n      getImages: { list, next_cursor },\r\n    } = await fetchImages({ cursor });\r\n\r\n    setCursor(next_cursor);\r\n    if (reset) {\r\n      setImages([...list]);\r\n    } else {\r\n      setImages([...list, ...images]);\r\n    }\r\n  }\r\n\r\n  function handleSelect(isAdd, img) {\r\n    if (isAdd) {\r\n      if (multiple) {\r\n        setIds([img, ...ids]);\r\n      } else {\r\n        setIds([img]);\r\n      }\r\n    } else {\r\n      setIds(ids.filter(item => item.public_id !== img.public_id));\r\n    }\r\n  }\r\n\r\n  function handleInsert() {\r\n    onInsert(ids);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(true);\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <form onSubmit={handleUpload}>\r\n        <input type=\"file\" id=\"gallery\" multiple ref={fileInput} />\r\n        <Textarea\r\n          placeholder=\"Enter url images\"\r\n          mt={2}\r\n          value={urls}\r\n          onChange={e => setUrls(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Upload</Button>\r\n      </form>\r\n\r\n      {error && (\r\n        <Box mt={4} textColor=\"red.500\">\r\n          {error}\r\n        </Box>\r\n      )}\r\n\r\n      <HStack mt={4}>\r\n        {dialog && (\r\n          <Button colorScheme=\"blue\" onClick={handleInsert}>\r\n            Insert\r\n          </Button>\r\n        )}\r\n        <ConfirmButton\r\n          colorScheme=\"red\"\r\n          buttonText=\"Delete\"\r\n          onAccept={handleDelete}\r\n        />\r\n      </HStack>\r\n\r\n      <SimpleGrid\r\n        columns={dialog ? [1, 1, 2] : [1, 2, 3, 4]}\r\n        gap={4}\r\n        mt={4}\r\n        as={InfiniteScroll}\r\n        hasMore={cursor}\r\n        dataLength={images.length}\r\n        next={() => fetchData(false)}\r\n        loader={<Spinner/>}\r\n        alignItems=\"center\"\r\n      >\r\n        {images.map(image => (\r\n          <Item\r\n            onChange={handleSelect}\r\n            isDisabled={\r\n              !multiple &&\r\n              ids.length === 1 &&\r\n              ids[0].public_id !== image.public_id\r\n            }\r\n            key={image.public_id}\r\n            {...image}\r\n          />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n","import BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Gallery from '../../components/Gallery';\r\n\r\nexport default function GalleryPage() {\r\n  return (\r\n    <BlockLayout blockName=\"Gallery\">\r\n      <Gallery />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","import { Avatar, Box, HStack, Icon, Text, VStack } from '@chakra-ui/react';\r\n\r\nimport {\r\n  FcBusinesswoman,\r\n  FcFolder,\r\n  FcManager,\r\n  FcNews,\r\n  FcRatings,\r\n  FcReading,\r\n} from 'react-icons/fc';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst menu = [\r\n  { name: 'Dashboard', icon: FcRatings, path: 'dashboard' },\r\n  { name: 'Gallery', icon: FcFolder, path: 'gallery' },\r\n  { name: 'Book', icon: FcReading, path: 'book' },\r\n  { name: 'Category', icon: FcFolder, path: 'category' },\r\n  { name: 'Author', icon: FcBusinesswoman, path: 'author' },\r\n  { name: 'Order', icon: FcNews, path: 'order' },\r\n  { name: 'User', icon: FcManager, path: 'user' },\r\n];\r\n\r\nexport default function LeftNav({ onClose }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <VStack\r\n      borderRightWidth={[0, 0, 1]}\r\n      py={4}\r\n      align=\"stretch\"\r\n      h=\"100vh\"\r\n      overflow=\"auto\"\r\n    >\r\n      <HStack px={4} pb={2}>\r\n        <Avatar\r\n          mr={4}\r\n          size=\"lg\"\r\n          src=\"https://i.pinimg.com/originals/f5/1d/08/f51d08be05919290355ac004cdd5c2d6.png\"\r\n        />\r\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n          Pikachu\r\n        </Text>\r\n      </HStack>\r\n      <Box borderTopWidth={1}>\r\n        {menu.map(item => (\r\n          <HStack\r\n            key={item.path}\r\n            px={4}\r\n            py={2}\r\n            align=\"center\"\r\n            borderBottomWidth={1}\r\n            onClick={() => {\r\n              if(onClose) onClose();\r\n              history.push('/admin/' + item.path);\r\n            }}\r\n            _hover={{ bg: 'gray.50', cursor: 'pointer' }}\r\n          >\r\n            <Icon w={8} h={8} as={item.icon} />\r\n            <Text>{item.name}</Text>\r\n          </HStack>\r\n        ))}\r\n      </Box>\r\n    </VStack>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  HStack,\r\n  Icon,\r\n  IconButton,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n} from '@chakra-ui/react';\r\nimport { FaHome, FaSearch } from 'react-icons/fa';\r\nimport { FcMenu } from 'react-icons/fc';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function TopNav({ onToggle }) {\r\n  return (\r\n    <HStack borderBottomWidth={1} h=\"60px\" px={2} align=\"center\">\r\n      <IconButton onClick={onToggle} icon={<Icon as={FcMenu} />} />\r\n      <InputGroup maxW={400}>\r\n        <InputLeftElement\r\n          pointerEvents=\"none\"\r\n          children={<Icon as={FaSearch} />}\r\n        />\r\n        <Input />\r\n      </InputGroup>\r\n      <HStack justify=\"flex-end\" flex=\"1\">\r\n        <Link to=\"/store\">\r\n          <Icon as={FaHome} w={8} h={8} />\r\n        </Link>\r\n        <Avatar\r\n          size=\"sm\"\r\n          src=\"https://i.pinimg.com/originals/f5/1d/08/f51d08be05919290355ac004cdd5c2d6.png\"\r\n        />\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Drawer,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  GridItem,\r\n  SimpleGrid,\r\n  useBreakpointValue,\r\n} from '@chakra-ui/react';\r\nimport { useState } from 'react';\r\nimport LeftNav from '../../components/Admin/Nav/LeftNav';\r\nimport TopNav from '../../components/Admin/Nav/TopNav';\r\n\r\nexport default function Layout({ children }) {\r\n  const enableDrawer = useBreakpointValue({\r\n    sm: true,\r\n    md: false,\r\n    lg: false,\r\n    xl: false,\r\n    base: true,\r\n  });\r\n\r\n  const [isOpen, setOpen] = useState(!enableDrawer);\r\n\r\n  function onToggle() {\r\n    setOpen(!isOpen);\r\n  }\r\n\r\n  function onClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={5}>\r\n        {isOpen && !enableDrawer && (\r\n          <GridItem>\r\n            <LeftNav/>\r\n          </GridItem>\r\n        )}\r\n        <GridItem colSpan={enableDrawer ? 5 : isOpen ? 4 : 5}>\r\n          <TopNav onToggle={onToggle} />\r\n          <Box p={4}>{children}</Box>\r\n        </GridItem>\r\n      </SimpleGrid>\r\n      <Drawer\r\n        isOpen={isOpen && enableDrawer}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent >\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>Menu</DrawerHeader>\r\n            <LeftNav onClose={onClose}/>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import { HStack, Icon, IconButton, Tooltip } from '@chakra-ui/react';\r\nimport { useMemo, useRef, useState } from 'react';\r\nimport { FcLock } from 'react-icons/fc';\r\n\r\nexport default function (\r\n  Comp,\r\n  { value: initialValue, column, row: { original }, save },\r\n  rules = null,\r\n  clickToEdit = false,\r\n  size = 'sm',\r\n  valueName = 'value'\r\n) {\r\n  return ({ children, ...rest }) => {\r\n    const [isEdit, setEdit] = useState(!clickToEdit);\r\n    const [value, setValue] = useState(initialValue || '');\r\n    const [error, setError] = useState(false);\r\n    const [errorLabel, setErrorLabel] = useState('');\r\n    const input = useRef(null);\r\n\r\n    const props = useMemo(\r\n      () => ({\r\n        [valueName]: value,\r\n        onChange,\r\n        onBlur,\r\n        ref: input,\r\n        size,\r\n        isInvalid: error,\r\n      }),\r\n      [value, error]\r\n    );\r\n\r\n    function onChange(e) {\r\n      if(valueName === 'isChecked'){\r\n        setValue(e.target.checked);\r\n      }\r\n      else{\r\n        setValue(e.target.value);\r\n      }\r\n    }\r\n\r\n    function onBlur(e) {\r\n      if (rules) {\r\n        const value = e.target.value.toString().trim();\r\n        for (const rule of rules) {\r\n          switch (rule) {\r\n            case 'required':\r\n              if (value === '') {\r\n                input.current.focus();\r\n                setError(true);\r\n                setErrorLabel('This field is required');\r\n                return;\r\n              }\r\n              break;\r\n            case 'email':\r\n              if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n                input.current.focus();\r\n                setError(true);\r\n                setErrorLabel('This field is a email');\r\n                return;\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n      setError(false);\r\n      save({ ...original, [column.id]: value });\r\n    }\r\n\r\n    return (\r\n      <Tooltip\r\n        colorScheme=\"red\"\r\n        label={errorLabel}\r\n        isOpen={error}\r\n        shouldWrapChildren\r\n        hasArrow={true}\r\n      >\r\n        <HStack>\r\n          {children ? (\r\n            <Comp {...rest} {...props} isDisabled={!isEdit}>\r\n              {children}\r\n            </Comp>\r\n          ) : (\r\n            <Comp {...rest} {...props} isDisabled={!isEdit} />\r\n          )}\r\n          {clickToEdit && !isEdit && (\r\n            <IconButton\r\n              size=\"sm\"\r\n              icon={<Icon as={FcLock} />}\r\n              onClick={() => setEdit(true)}\r\n            />\r\n          )}\r\n        </HStack>\r\n      </Tooltip>\r\n    );\r\n  };\r\n}\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Table from '../../components/Table';\r\nimport * as FcIcon from 'react-icons/fc';\r\nimport { Button, Input, Select } from '@chakra-ui/react';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport customInput from '../../hocs/customInput';\r\nimport {\r\n  fetchCategories,\r\n  updateCategory,\r\n  removeCategory,\r\n  addCategory,\r\n} from '../../api';\r\n\r\nexport default function Category() {\r\n  const iconNameList = useMemo(() => Object.keys(FcIcon), []);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const { categories } = await fetchCategories();\r\n      setCategories(categories);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Icon',\r\n        accessor: 'icon',\r\n        Cell: data => {\r\n          const IconSelect = customInput(Select, data);\r\n          return (\r\n            <IconSelect>\r\n              {iconNameList.map((item, i) => (\r\n                <option value={item} key={i}>\r\n                  {item}\r\n                </option>\r\n              ))}\r\n            </IconSelect>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: data => {\r\n          const NameInput = customInput(Input, data, ['required']);\r\n          return <NameInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Parent',\r\n        accessor: 'parent.id',\r\n        id: 'parentID',\r\n        Cell: table => {\r\n          const ParentInput = customInput(Select, table);\r\n          console.log(table.data);\r\n          return (\r\n            <ParentInput>\r\n              <option>Choose parent</option>\r\n              {table.data\r\n                .filter(category => category.parent === null)\r\n                .map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </ParentInput>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value, remove }) => (\r\n          <ConfirmButton\r\n            size=\"sm\"\r\n            onAccept={() => remove({ id: value })}\r\n            colorScheme=\"red\"\r\n            buttonText=\"Delete\"\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [skipPageReset, setSkipPage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkipPage(false);\r\n  }, [categories]);\r\n\r\n  const action = {\r\n    save: async ({ id, name, parentID, icon }) => {\r\n      try {\r\n        setSkipPage(true);\r\n        await updateCategory({ id, input: { name, parentID, icon } });\r\n        fetchData();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n    remove: async ({ id }) => {\r\n      try {\r\n        setSkipPage(true);\r\n        await removeCategory({ id });\r\n        fetchData();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n  };\r\n\r\n  async function add() {\r\n    try {\r\n      setSkipPage(true);\r\n      await addCategory({ input: { name: 'New Category' } });\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Category Table\">\r\n      <Button colorScheme=\"blue\" my={2} onClick={add}>\r\n        Add\r\n      </Button>\r\n      <Table\r\n        skipPageReset={skipPageReset}\r\n        columns={columns}\r\n        data={categories}\r\n        action={action}\r\n      />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","import { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/react\";\r\nimport Gallery from \"../Gallery\";\r\n\r\nexport default function GalleryModal({onInsert, multiple=false, ...rest}) {\r\n  return (\r\n    <Modal {...rest} size=\"xl\">\r\n      <ModalOverlay />\r\n      <ModalContent maxH={500} overflowY=\"auto\">\r\n        <ModalHeader>Insert Image</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Gallery dialog={true} multiple={multiple} onInsert={onInsert}/>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Table from '../../components/Table';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Input,\r\n  Textarea,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport customInput from '../../hocs/customInput';\r\nimport GalleryModal from '../../components/Admin/GalleryModal';\r\nimport { addAuthor, fetchAuthors, removeAuthor, updateAuthor } from '../../api';\r\n\r\nexport default function Author() {\r\n  const { isOpen, onClose, onOpen } = useDisclosure();\r\n  const [avatarData, setAvatarData] = useState(null);\r\n\r\n  function openModal(data) {\r\n    onOpen();\r\n    setAvatarData(data);\r\n  }\r\n\r\n  function onInsert(ids) {\r\n    if (ids.length === 1) {\r\n      console.log(ids);\r\n      const input = {\r\n        avatar: ids[0].public_id,\r\n        name: avatarData.row.original.name,\r\n        description: avatarData.row.original.description,\r\n      }\r\n      avatarData.save({id: avatarData.row.original.id, ...input});\r\n      setAvatarData(null);\r\n    }\r\n    onClose();\r\n  }\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Avatar',\r\n        accessor: 'avatar',\r\n        Cell: data => {\r\n          return <Avatar src={data.value} onClick={() => openModal(data)} />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: data => {\r\n          const NameInput = customInput(Input, data, ['required']);\r\n          return <NameInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Description',\r\n        accessor: 'description',\r\n        id: 'description',\r\n        Cell: data => {\r\n          const DescInput = customInput(Textarea, data);\r\n          return <DescInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value, remove }) => (\r\n          <ConfirmButton size=\"sm\" onAccept={() => remove({id: value})} colorScheme=\"red\" buttonText=\"Delete\" />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [authors, setAuthors] = useState([]);\r\n\r\n  const [skipPageReset, setSkipPage] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkipPage(false);\r\n  }, [authors]);\r\n\r\n\r\n  async function fetchData(){\r\n    try{\r\n      const {authors} = await fetchAuthors();\r\n      setAuthors(authors);\r\n    }\r\n    catch(error){\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const action = {\r\n    save: async ({id, name, avatar, description}) => {\r\n      try{\r\n        setSkipPage(true);\r\n        await updateAuthor({id, input: {name, avatar, description}});\r\n        fetchData();\r\n      }\r\n      catch(error){\r\n        throw error;\r\n      }\r\n    },\r\n    remove: async ({id}) => {\r\n      try{\r\n        setSkipPage(true);\r\n        await removeAuthor({id});\r\n        fetchData();\r\n      }\r\n      catch(error){\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  async function add(){\r\n    try{\r\n      setSkipPage(true);\r\n      await addAuthor({input: {name: 'New Author'}});\r\n      fetchData();\r\n    }\r\n    catch(error){\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Author Table\">\r\n      <Button colorScheme=\"blue\" my={2} onClick={add}>Add</Button>\r\n      <Table columns={columns} data={authors} action={action} />\r\n      <GalleryModal isOpen={isOpen} onClose={onClose} onInsert={onInsert} />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Table from '../../components/Table';\r\nimport { Button, Checkbox, Input } from '@chakra-ui/react';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport customInput from '../../hocs/customInput';\r\nimport { fetchUsers, updateUser, addUser, removeUser } from '../../api';\r\nimport random from 'crypto-random-string';\r\n\r\nexport default function User() {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: data => {\r\n          const NameInput = customInput(Input, data, ['required']);\r\n          return <NameInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: 'email',\r\n        id: 'email',\r\n        Cell: data => {\r\n          const EmailInput = customInput(Input, data, ['required', 'email']);\r\n          return <EmailInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Admin',\r\n        accessor: 'isAdmin',\r\n        id: 'isAdmin',\r\n        Cell: data => {\r\n          const AdminCheckbox = customInput(\r\n            Checkbox,\r\n            data,\r\n            [],\r\n            false,\r\n            'sm',\r\n            'isChecked'\r\n          );\r\n          return <AdminCheckbox />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Password',\r\n        accessor: 'password',\r\n        id: 'password',\r\n        Cell: data => {\r\n          const PasswordInput = customInput(Input, data, ['required'], true);\r\n          return (\r\n            <PasswordInput\r\n              type=\"password\"\r\n              placeholder=\"Click lock icon to edit\"\r\n            />\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value, remove }) => (\r\n          <ConfirmButton\r\n            size=\"sm\"\r\n            onAccept={() => remove({ id: value })}\r\n            colorScheme=\"red\"\r\n            buttonText=\"Delete\"\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [skipPageReset, setSkipReset] = useState(false);\r\n\r\n  const action = {\r\n    async save({ id, name, email, password }) {\r\n      try {\r\n        setSkipReset(true);\r\n        await updateUser({ id, input: { name, email, password } });\r\n        fetchData();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n    async remove({ id }) {\r\n      try {\r\n        setSkipReset(true);\r\n        await removeUser({ id });\r\n        fetchData();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n  };\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const { users } = await fetchUsers();\r\n      setUsers(users);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async function add() {\r\n    try {\r\n      setSkipReset(true);\r\n      await addUser({\r\n        input: { name: 'New User', email: random({length: 10}) + '@example.xyz', password: '123123' },\r\n      });\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkipReset(false);\r\n  }, [users]);\r\n\r\n  return (\r\n    <BlockLayout blockName=\"User Table\">\r\n      <Button colorScheme=\"blue\" my={2} onClick={add}>\r\n        Add\r\n      </Button>\r\n      <Table\r\n        columns={columns}\r\n        data={users}\r\n        action={action}\r\n        skipPageReset={skipPageReset}\r\n      />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","import { Button, HStack, Icon, IconButton, Image, useDisclosure, VStack } from '@chakra-ui/react';\r\nimport { FaRegTrashAlt } from 'react-icons/fa';\r\nimport GalleryModal from './GalleryModal';\r\n\r\nexport default function ImagePicker({ images = [], onChange }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  function onInsert(list) {\r\n    const newList = [...images];\r\n    for(const item of list){\r\n        if(!images.find(image => image.public_id === item.public_id)){\r\n            newList.push(item);\r\n        }\r\n    }\r\n    onChange(newList);\r\n    onClose();\r\n  }\r\n\r\n  function handleRemove(deleteItem){\r\n      onChange(images.filter(item => item.public_id !== deleteItem.public_id));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button mb={4} colorScheme=\"blue\" size=\"sm\" onClick={onOpen}>Add Image</Button>\r\n      {images.length > 0 && <HStack borderWidth={1} borderRadius=\"md\" p={2} wrap=\"wrap\">{images.map(item => (\r\n        <VStack key={item.public_id} mb={4}>\r\n          <Image src={item.secure_url} h={40} objectFit=\"contain\" />\r\n          <IconButton size=\"sm\" colorScheme=\"red\" icon={<Icon as={FaRegTrashAlt}/>} onClick={() => handleRemove(item)}/>\r\n        </VStack>\r\n      ))}</HStack>}\r\n      <GalleryModal\r\n        isOpen={isOpen}\r\n        onInsert={onInsert}\r\n        multiple={true}\r\n        onClose={onClose}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Select from 'react-select';\r\nimport {Editor} from '@tinymce/tinymce-react';\r\nimport ImagePicker from '../ImagePicker';\r\n\r\nexport default function ProductEditForm({ product, save, categoryOptions, authorOptions }) {\r\n  const { handleSubmit, control, errors } = useForm({defaultValues: product});\r\n\r\n  function handleSave(data) {\r\n    const input = {\r\n      ...data,\r\n      price: Number(data.price),\r\n      discount: Number(data.discount),\r\n      images: JSON.stringify(data.images.map(image => image.public_id)),\r\n      category: data.category.value,\r\n      authors: data.authors.map(author => author.value)\r\n    }\r\n    save({id: product.id, input});\r\n  }\r\n\r\n  return (\r\n    <Box maxW={450}>\r\n      <form onSubmit={handleSubmit(data => handleSave(data))}>\r\n        <VStack align=\"flex-start\">\r\n          <FormControl isInvalid={errors.name}>\r\n            <FormLabel htmlFor=\"name\">Enter Product Name:</FormLabel>\r\n            <Controller\r\n              placeholder=\"Enter book name\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              as={Input}\r\n              rules={{ required: true }}\r\n              defaultValue=\"\"\r\n              control={control}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.category}>\r\n            <FormLabel htmlFor=\"category\">Choose a category:</FormLabel>\r\n            <Controller\r\n              id=\"category\"\r\n              name=\"category\"\r\n              rules={{ required: true }}\r\n              control={control}\r\n              defaultValue=\"\"\r\n              render={({ onChange, value }) => (\r\n                <Select\r\n                  onChange={onChange}\r\n                  options={categoryOptions}\r\n                  value={value}\r\n                  isSearchable={true}\r\n                />\r\n              )}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.authors}>\r\n            <FormLabel htmlFor=\"authors\">Choose authors:</FormLabel>\r\n            <Controller\r\n              name=\"authors\"\r\n              id=\"authors\"\r\n              defaultValue=\"\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ onChange, value }) => (\r\n                <Select\r\n                  options={authorOptions}\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  isMulti={true}\r\n                  isSearchable={true}\r\n                />\r\n              )}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.price}>\r\n            <FormLabel htmlFor=\"price\">Enter price:</FormLabel>\r\n            <Controller\r\n              name=\"price\"\r\n              id=\"price\"\r\n              control={control}\r\n              as={Input}\r\n              type=\"number\"\r\n              min={0}\r\n              defaultValue={1}\r\n              rules={{ required: true }}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.discount}>\r\n            <FormLabel htmlFor=\"discount\">Enter discount:</FormLabel>\r\n            <Controller\r\n              name=\"discount\"\r\n              id=\"discount\"\r\n              control={control}\r\n              as={Input}\r\n              step={0.01}\r\n              type=\"number\"\r\n              min={0}\r\n              max={1}\r\n              defaultValue={0}\r\n              rules={{ required: true }}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          <FormControl isInvalid={errors.images}>\r\n            <FormLabel htmlFor=\"images\">Images:</FormLabel>\r\n            <Controller\r\n              name=\"images\"\r\n              id=\"images\"\r\n              control={control}\r\n              defaultValue={[]}\r\n              rules={{ required: true }}\r\n              render={({onChange, value}) => (<ImagePicker images={value} onChange={onChange}/>)}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          <FormControl isInvalid={errors.description}>\r\n            <FormLabel htmlFor=\"discount\">Enter description:</FormLabel>\r\n            <Controller\r\n              name=\"description\"\r\n              id=\"description\"\r\n              defaultValue=\"\"\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ onChange, value }) => (\r\n                <Editor initialValue={value} onEditorChange={onChange}/>\r\n              )}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n\r\n          <Button size=\"sm\" colorScheme=\"green\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","import { Button, HStack, Image } from '@chakra-ui/react';\r\nimport { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport {\r\n  addProduct,\r\n  fetchAuthors,\r\n  fetchCategories,\r\n  fetchProducts,\r\n  removeProduct,\r\n  updateProduct,\r\n} from '../../api';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport ProductEditForm from '../../components/Admin/Form/ProductEditForm';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport Table from '../../components/Table';\r\n\r\nexport default function ProductPage() {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Image',\r\n        accessor: 'images',\r\n        Cell: ({ value }) => <Image width=\"60px\" src={value[0].secure_url} />,\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'price',\r\n        Cell: ({ value }) => (\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Discount',\r\n        accessor: 'discount',\r\n      },\r\n      {\r\n        Header: 'Category',\r\n        accessor: 'category.name',\r\n      },\r\n      {\r\n        Header: 'Author',\r\n        accessor: 'authors',\r\n        Cell: ({ value }) => {\r\n          return value.map(item => item.name).join(', ');\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        id: 'expander',\r\n        Cell: ({ value, row, remove }) => {\r\n          return (\r\n            <HStack>\r\n              <Button\r\n                {...row.getToggleRowExpandedProps()}\r\n                size=\"sm\"\r\n                as=\"span\"\r\n                colorScheme=\"green\"\r\n              >\r\n                Edit\r\n              </Button>\r\n              <ConfirmButton\r\n                onAccept={() => remove({ id: value })}\r\n                buttonText=\"Delete\"\r\n                colorScheme=\"red\"\r\n                size=\"sm\"\r\n              />\r\n            </HStack>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [skipPageReset, setSkipPage] = useState(false);\r\n\r\n  async function add() {\r\n    try {\r\n      setSkipPage(true);\r\n      const input = {\r\n        name: 'New book',\r\n        images: JSON.stringify(['store/200x300_rffsze']),\r\n        price: 1,\r\n        category: '1',\r\n        authors: ['1']\r\n      };\r\n\r\n      await addProduct({\r\n        input\r\n      });\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async function save({ id, input }) {\r\n    try {\r\n      setSkipPage(true);\r\n      await updateProduct({ id, input });\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const renderRowSubComponent = useCallback(\r\n    ({ row }) => {\r\n      const product = { ...row.original };\r\n      product.category = {\r\n        value: product.category.id,\r\n        label: product.category.name,\r\n      };\r\n      product.authors = product.authors.map(({ id, name }) => ({\r\n        label: name,\r\n        value: id,\r\n      }));\r\n\r\n      return (\r\n        <ProductEditForm\r\n          product={product}\r\n          save={save}\r\n          categoryOptions={categories}\r\n          authorOptions={authors}\r\n        />\r\n      );\r\n    },\r\n    [authors, categories]\r\n  );\r\n\r\n  const action = {\r\n    async remove({ id }) {\r\n      try {\r\n        setSkipPage(true);\r\n        await removeProduct({ id });\r\n        fetchData();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n  };\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const { products } = await fetchProducts({ search: 'order=1' });\r\n      const { categories } = await fetchCategories();\r\n      const { authors } = await fetchAuthors();\r\n      setProducts(products);\r\n      setAuthors(\r\n        authors.map(author => ({ value: author.id, label: author.name }))\r\n      );\r\n      setCategories(\r\n        categories.map(category => ({\r\n          value: category.id,\r\n          label: category.name,\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkipPage(false);\r\n  }, [products]);\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Product Table\">\r\n      <Button colorScheme=\"blue\" my={2} onClick={add}>\r\n        Add\r\n      </Button>\r\n      <Table\r\n        columns={columns}\r\n        data={products}\r\n        renderRowSubComponent={renderRowSubComponent}\r\n        action={action}\r\n        skipPageReset={skipPageReset}\r\n      />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","import { HStack, VStack, Input, IconButton, Icon, Heading } from '@chakra-ui/react';\r\nimport { useMemo, useState } from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { FaRegTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\nimport ShortedProduct from '../../components/Store/ShortedProduct';\r\n\r\nexport default function ProductPicker({\r\n  items = [],\r\n  onChange,\r\n  productOptions,\r\n}) {\r\n  const [value] = useState(null);\r\n\r\n  function handleSelect({ value }) {\r\n    const findItem = items.find(i => i.id === value.id);\r\n    if (findItem) {\r\n      findItem.quantity++;\r\n      onChange([...items]);\r\n    } else {\r\n      onChange([...items, { quantity: 1, ...value }]);\r\n    }\r\n  }\r\n\r\n  function handleDelete(deleteItem) {\r\n    onChange(items.filter(item => item.id !== deleteItem.id));\r\n  }\r\n\r\n  function handleChange(e, updateItem) {\r\n    const item = items.find(i => i.id === updateItem.id);\r\n    const quantity = Number(e.target.value);\r\n    item.quantity = quantity < 1 ? 1 : quantity;\r\n    onChange([...items]);\r\n  }\r\n\r\n  const total = useMemo(() => items.reduce((prev, item) => prev + item.price * (1-item.discount) * item.quantity, 0), [items]);\r\n\r\n  return (\r\n    <VStack align=\"stretch\" borderWidth={1} borderRadius=\"md\" p={2}>\r\n      <Select value={value} onChange={handleSelect} options={productOptions} />\r\n      {items.map((item, i) => (\r\n        <HStack key={i} justify=\"space-between\">\r\n          <ShortedProduct {...item} />\r\n          <Input\r\n            type=\"number\"\r\n            size=\"sm\"\r\n            w={100}\r\n            value={item.quantity}\r\n            onChange={e => handleChange(e, item)}\r\n          />\r\n          <IconButton\r\n            icon={<Icon as={FaRegTrashAlt} />}\r\n            size=\"sm\"\r\n            onClick={() => handleDelete(item)}\r\n          />\r\n        </HStack>\r\n      ))}\r\n      <Heading>\r\n        { \"Total: \"}\r\n        <CurrencyFormat\r\n          value={total}\r\n          displayType={'text'}\r\n          decimalScale={2}\r\n          thousandSeparator={true}\r\n          prefix={'$'}\r\n        />\r\n      </Heading>\r\n    </VStack>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Select from 'react-select';\r\nimport ProductPicker from '../ProductPicker';\r\n\r\nexport default function OrderEditForm({\r\n  order,\r\n  userOptions,\r\n  productOptions,\r\n  statusOptions,\r\n  save\r\n}) {\r\n  const { handleSubmit, control, errors } = useForm({ defaultValues: order });\r\n\r\n  function handleSave(data) {\r\n    const userID = data.user.value;\r\n    delete data.user;\r\n    const input = {\r\n      ...data,\r\n      status: data.status.value,\r\n      total: data.items.reduce((prev, item) => prev + item.price * (1-item.discount) * item.quantity, 0),\r\n      items: data.items.map(({id, discount, price, quantity}) => ({id, discount, price, quantity}))\r\n    }\r\n    save({input, id: order.id, userID});\r\n  }\r\n\r\n  return (\r\n    <Box maxW={450}>\r\n      <form onSubmit={handleSubmit(data => handleSave(data))}>\r\n        <VStack align=\"flex-start\">\r\n          <FormControl isInvalid={errors.email}>\r\n            <FormLabel htmlFor=\"user\">Choose Customer:</FormLabel>\r\n            <Controller\r\n              placeholder=\"Enter customer name\"\r\n              id=\"user\"\r\n              name=\"user\"\r\n              rules={{ required: true }}\r\n              control={control}\r\n              render={({ onChange, value }) => {\r\n                return (\r\n                  <Select\r\n                    options={userOptions}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    isSearchable={true}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.name}>\r\n            <FormLabel htmlFor=\"name\">Customer Name:</FormLabel>\r\n            <Controller\r\n              placeholder=\"Enter name\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              as={Input}\r\n              rules={{ required: true }}\r\n              control={control}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.name}>\r\n            <FormLabel htmlFor=\"phone\">Customer Phone:</FormLabel>\r\n            <Controller\r\n              placeholder=\"Enter phone\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              as={Input}\r\n              rules={{ required: true }}\r\n              control={control}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.address}>\r\n            <FormLabel htmlFor=\"admin\">Address:</FormLabel>\r\n            <Controller\r\n              placeholder=\"Enter address\"\r\n              id=\"address\"\r\n              name=\"address\"\r\n              as={Input}\r\n              rules={{ required: true }}\r\n              control={control}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.status}>\r\n            <FormLabel htmlFor=\"status\">Status:</FormLabel>\r\n            <Controller\r\n              placeholder=\"Choose status\"\r\n              id=\"status\"\r\n              name=\"status\"\r\n              rules={{ required: true }}\r\n              control={control}\r\n              render={({ onChange, value }) => (\r\n                <Select\r\n                  options={statusOptions}\r\n                  value={value}\r\n                  onChange={onChange}\r\n                />\r\n              )}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.items}>\r\n            <FormLabel htmlFor=\"name\">Choose product:</FormLabel>\r\n            <Controller\r\n              id=\"items\"\r\n              name=\"items\"\r\n              rules={{ required: true }}\r\n              control={control}\r\n              render={({ onChange, value }) => (\r\n                <ProductPicker\r\n                  productOptions={productOptions}\r\n                  items={value}\r\n                  onChange={onChange}\r\n                />\r\n              )}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <Button size=\"sm\" colorScheme=\"green\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","import { Button, HStack } from '@chakra-ui/react';\r\nimport { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport Table from '../../components/Table';\r\nimport OrderEditForm from '../../components/Admin/Form/OrderEditForm';\r\nimport {\r\n  addOrder,\r\n  fetchOrders,\r\n  fetchProducts,\r\n  fetchUsers,\r\n  removeOrder,\r\n  updateOrder,\r\n} from '../../api';\r\nimport moment from 'moment';\r\n\r\nexport default function OrderPage() {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Total',\r\n        accessor: 'total',\r\n        Cell: ({ value }) => (\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={'text'}\r\n            decimalScale={2}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Address',\r\n        accessor: 'address',\r\n      },\r\n      {\r\n        Header: 'Order Date',\r\n        accessor: 'createdAt',\r\n        Cell: ({value}) => (moment(Number(value)).fromNow())\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value, row, remove }) => {\r\n          return (\r\n            <HStack>\r\n              <Button\r\n                as=\"span\"\r\n                {...row.getToggleRowExpandedProps()}\r\n                size=\"sm\"\r\n                colorScheme=\"green\"\r\n              >\r\n                Edit\r\n              </Button>\r\n              <ConfirmButton\r\n                onAccept={() => remove(value)}\r\n                buttonText=\"Delete\"\r\n                colorScheme=\"red\"\r\n                size=\"sm\"\r\n              />\r\n            </HStack>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [skipPageReset, setSkipPage] = useState(false);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const { orders } = await fetchOrders();\r\n      setOrders(orders);\r\n      const { products } = await fetchProducts();\r\n      setProducts(products);\r\n      const { users } = await fetchUsers();\r\n      setUsers(users);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async function save(data) {\r\n    try {\r\n      setSkipPage(true);\r\n      await updateOrder(data);\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async function add() {\r\n    try {\r\n      setSkipPage(true);\r\n      await addOrder({\r\n        input: {\r\n          name: 'Custom Name',\r\n          status: 'created',\r\n          phone: '123456',\r\n          total: 0,\r\n          items: [],\r\n          address: 'USA',\r\n        },\r\n      });\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async function remove(id) {\r\n    try {\r\n      setSkipPage(true);\r\n      await removeOrder({ id });\r\n      fetchData();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const renderRowSubComponent = useCallback(\r\n    ({ row: { original } }) => {\r\n      const userOptions = users.map(user => ({\r\n        value: user.id,\r\n        label: user.email,\r\n      }));\r\n      const productOptions = products.map(product => ({\r\n        value: product,\r\n        label: product.name,\r\n      }));\r\n      const statusOptions = [\r\n        {\r\n          value: 'created',\r\n          label: 'created',\r\n        },\r\n        {\r\n          value: 'charged',\r\n          label: 'charged',\r\n        },\r\n      ];\r\n\r\n      original.user = original.user || {};\r\n\r\n      return (\r\n        <OrderEditForm\r\n          order={{\r\n            ...original,\r\n            user:  {value: original.user.id, label: original.user.email},\r\n            status: { label: original.status, name: original.status },\r\n          }}\r\n          save={save}\r\n          userOptions={userOptions}\r\n          productOptions={productOptions}\r\n          statusOptions={statusOptions}\r\n        />\r\n      );\r\n    },\r\n    [users, products]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkipPage(false);\r\n  }, [products]);\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Order Table\">\r\n      <Button colorScheme=\"blue\" my={2} onClick={add}>\r\n        Add\r\n      </Button>\r\n      <Table\r\n        columns={columns}\r\n        renderRowSubComponent={renderRowSubComponent}\r\n        data={orders}\r\n        skipPageReset={skipPageReset}\r\n        action={{ remove }}\r\n      />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Gallery from './Gallery';\r\nimport Layout from './Layout';\r\nimport Category from './Category';\r\nimport Author from './Author';\r\nimport User from './User';\r\nimport ProductPage from './Product';\r\nimport OrderPage from './Order';\r\nimport withAuth from '../../hocs/withAuth';\r\n\r\nconst menu = [\r\n  { name: 'Book', path: 'book' },\r\n  { name: 'Category', path: 'category' },\r\n  { name: 'Author', path: 'author' },\r\n  { name: 'Order', path: 'order' },\r\n  { name: 'User', path: 'user' },\r\n];\r\n\r\nexport default withAuth(function AdminRoute() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/admin/dashboard\" component={Dashboard} />\r\n        <Route path=\"/admin/gallery\" component={Gallery} />\r\n        <Route path=\"/admin/category\" component={Category} />\r\n        <Route path=\"/admin/author\" component={Author} />\r\n        <Route path=\"/admin/user\" component={User} />\r\n        <Route path=\"/admin/book\" component={ProductPage} />\r\n        <Route path=\"/admin/order\" component={OrderPage} />\r\n        <Redirect to=\"/admin/dashboard\" />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}, {checkAdmin: true});\r\n"],"sourceRoot":""}